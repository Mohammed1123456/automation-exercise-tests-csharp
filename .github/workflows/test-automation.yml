name: Test Automation Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        test-category: [ui, api, smoke, regression]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Run UI Tests
      if: matrix.test-category == 'ui'
      run: |
        dotnet test --no-build --configuration Release --logger "trx;LogFileName=ui-test-results.trx" --logger "html;LogFileName=ui-test-results.html" --results-directory ./TestResults -- NUnit.Where="cat==ui"
      env:
        HEADLESS: 1
        
    - name: Run API Tests
      if: matrix.test-category == 'api'
      run: |
        dotnet test --no-build --configuration Release --logger "trx;LogFileName=api-test-results.trx" --logger "html;LogFileName=api-test-results.html" --results-directory ./TestResults -- NUnit.Where="cat==api"
        
    - name: Run Smoke Tests
      if: matrix.test-category == 'smoke'
      run: |
        dotnet test --no-build --configuration Release --logger "trx;LogFileName=smoke-test-results.trx" --logger "html;LogFileName=smoke-test-results.html" --results-directory ./TestResults -- NUnit.Where="cat==smoke"
      env:
        HEADLESS: 1
        
    - name: Run Regression Tests
      if: matrix.test-category == 'regression'
      run: |
        dotnet test --no-build --configuration Release --logger "trx;LogFileName=regression-test-results.trx" --logger "html;LogFileName=regression-test-results.html" --results-directory ./TestResults -- NUnit.Where="cat==regression"
      env:
        HEADLESS: 1
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.test-category }}
        path: |
          TestResults/
          !TestResults/**/*.log
        retention-days: 30
        
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: ${{ matrix.test-category }} Tests
        path: TestResults/*.trx
        reporter: dotnet-trx
        fail-on-error: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-summary:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Generate test summary
      run: |
        echo "# Test Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "| Test Category | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|---------------|--------|" >> $GITHUB_STEP_SUMMARY
        
        for category in ui api smoke regression; do
          if [ -d "test-results-$category" ]; then
            echo "| $category | ✅ Passed |" >> $GITHUB_STEP_SUMMARY
          else
            echo "| $category | ❌ Failed |" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Artifacts" >> $GITHUB_STEP_SUMMARY
        echo "Test results and HTML reports are available in the artifacts section." >> $GITHUB_STEP_SUMMARY
